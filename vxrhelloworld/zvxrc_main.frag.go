// go run goarrg.com/rhi/vxr/cmd/vxrc -dir=./shaders -generator=go -skip-metadata main.frag 
// Code generated by the command above; DO NOT EDIT.

package main

import(
	"goarrg.com/rhi/vxr"
)

func vxrcLoad_main_frag() (spv *vxr.Shader, layout *vxr.ShaderLayout) {
	spv = &vxr.Shader{ID:"main.frag", SPIRV:[]uint32{0x7230203, 0x10600, 0xd000b, 0x14, 0x0, 0x20011, 0x1, 0x6000b, 0x2, 0x4c534c47, 0x6474732e, 0x3035342e, 0x0, 0x3000e, 0x0, 0x1, 0x7000f, 0x4, 0x5, 0x6e69616d, 0x0, 0xa, 0xd, 0x30010, 0x5, 0x7, 0x50007, 0x1, 0x6e69616d, 0x6172662e, 0x67, 0xcb0003, 0x2, 0x1c2, 0x1, 0x430a2a2f, 0x7279706f, 0x74686769, 0x32303220, 0x68542030, 0x6f672065, 0x47525241, 0x74754120, 0x73726f68, 0x4c0a0a2e, 0x6e656369, 0x20646573, 0x65646e75, 0x68742072, 0x70412065, 0x65686361, 0x63694c20, 0x65736e65, 0x6556202c, 0x6f697372, 0x2e32206e, 0x74282030, 0x22206568, 0x6563694c, 0x2265736e, 0x790a3b29, 0x6d20756f, 0x6e207961, 0x7520746f, 0x74206573, 0x20736968, 0x656c6966, 0x63786520, 0x20747065, 0x63206e69, 0x6c706d6f, 0x636e6169, 0x69772065, 0x74206874, 0x4c206568, 0x6e656369, 0xa2e6573, 0x20756f59, 0x2079616d, 0x6174626f, 0x61206e69, 0x706f6320, 0x666f2079, 0x65687420, 0x63694c20, 0x65736e65, 0xa746120, 0x2020200a, 0x74746820, 0x2f2f3a70, 0x2e777777, 0x63617061, 0x6f2e6568, 0x6c2f6772, 0x6e656369, 0x2f736573, 0x4543494c, 0x2d45534e, 0xa302e32, 0x6c6e550a, 0x20737365, 0x75716572, 0x64657269, 0x20796220, 0x6c707061, 0x62616369, 0x6c20656c, 0x6f207761, 0x67612072, 0x64656572, 0x206f7420, 0x77206e69, 0x69746972, 0x202c676e, 0x74666f73, 0x65726177, 0x7369640a, 0x62697274, 0x64657475, 0x646e7520, 0x74207265, 0x4c206568, 0x6e656369, 0x69206573, 0x69642073, 0x69727473, 0x65747562, 0x6e6f2064, 0x206e6120, 0x20534122, 0x20225349, 0x49534142, 0x570a2c53, 0x4f485449, 0x57205455, 0x41525241, 0x4549544e, 0x524f2053, 0x4e4f4320, 0x49544944, 0x20534e4f, 0x4120464f, 0x4b20594e, 0x2c444e49, 0x74696520, 0x20726568, 0x72707865, 0x20737365, 0x6920726f, 0x696c706d, 0xa2e6465, 0x20656553, 0x20656874, 0x6563694c, 0x2065736e, 0x20726f66, 0x20656874, 0x63657073, 0x63696669, 0x6e616c20, 0x67617567, 0x6f672065, 0x6e726576, 0x20676e69, 0x6d726570, 0x69737369, 0x20736e6f, 0xa646e61, 0x696d696c, 0x69746174, 0x20736e6f, 0x65646e75, 0x68742072, 0x694c2065, 0x736e6563, 0x2a0a2e65, 0x230a0a2f, 0x73726576, 0x206e6f69, 0xa303534, 0x74786523, 0x69736e65, 0x47206e6f, 0x52415f4c, 0x65735f42, 0x61726170, 0x735f6574, 0x65646168, 0x626f5f72, 0x7463656a, 0x203a2073, 0x62616e65, 0x230a656c, 0x67617270, 0x7320616d, 0x65646168, 0x74735f72, 0x28656761, 0x67617266, 0x746e656d, 0x6c0a0a29, 0x756f7961, 0x6f6c2874, 0x69746163, 0x3d206e6f, 0x20293020, 0x76206e69, 0x20336365, 0x67617266, 0x6f6c6f43, 0xa0a3b72, 0x6f79616c, 0x6c287475, 0x7461636f, 0x206e6f69, 0x2930203d, 0x74756f20, 0x63657620, 0x756f2034, 0x6c6f4374, 0xa3b726f, 0x696f760a, 0x616d2064, 0x29286e69, 0x90a7b20, 0x4374756f, 0x726f6c6f, 0x76203d20, 0x28346365, 0x67617266, 0x6f6c6f43, 0x31202c72, 0x3b29302e, 0xa7d0a, 0x90004, 0x415f4c47, 0x735f4252, 0x72617065, 0x5f657461, 0x64616873, 0x6f5f7265, 0x63656a62, 0x7374, 0xa0004, 0x475f4c47, 0x4c474f4f, 0x70635f45, 0x74735f70, 0x5f656c79, 0x656e696c, 0x7269645f, 0x69746365, 0x6576, 0x80004, 0x475f4c47, 0x4c474f4f, 0x6e695f45, 0x64756c63, 0x69645f65, 0x74636572, 0x657669, 0x40005, 0x5, 0x6e69616d, 0x0, 0x50005, 0xa, 0x4374756f, 0x726f6c6f, 0x0, 0x50005, 0xd, 0x67617266, 0x6f6c6f43, 0x72, 0x6014a, 0x72746e65, 0x6f702d79, 0x20746e69, 0x6e69616d, 0x0, 0x6014a, 0x65696c63, 0x7620746e, 0x616b6c75, 0x3030316e, 0x0, 0x6014a, 0x67726174, 0x652d7465, 0x7320766e, 0x76726970, 0x362e31, 0x7014a, 0x67726174, 0x652d7465, 0x7620766e, 0x616b6c75, 0x332e316e, 0x0, 0x6014a, 0x72746e65, 0x6f702d79, 0x20746e69, 0x6e69616d, 0x0, 0x40047, 0xa, 0x1e, 0x0, 0x40047, 0xd, 0x1e, 0x0, 0x20013, 0x3, 0x30021, 0x4, 0x3, 0x30016, 0x7, 0x20, 0x40017, 0x8, 0x7, 0x4, 0x40020, 0x9, 0x3, 0x8, 0x4003b, 0x9, 0xa, 0x3, 0x40017, 0xb, 0x7, 0x3, 0x40020, 0xc, 0x1, 0xb, 0x4003b, 0xc, 0xd, 0x1, 0x4002b, 0x7, 0xf, 0x3f800000, 0x40008, 0x1, 0x19, 0xb, 0x50036, 0x3, 0x5, 0x0, 0x4, 0x200f8, 0x6, 0x40008, 0x1, 0x1a, 0x0, 0x4003d, 0xb, 0xe, 0xd, 0x50051, 0x7, 0x10, 0xe, 0x0, 0x50051, 0x7, 0x11, 0xe, 0x1, 0x50051, 0x7, 0x12, 0xe, 0x2, 0x70050, 0x8, 0x13, 0x10, 0x11, 0x12, 0xf, 0x3003e, 0xa, 0x13, 0x40008, 0x1, 0x1b, 0x0, 0x100fd, 0x10038}}
	layout = &vxr.ShaderLayout{EntryPoints:map[string]vxr.ShaderEntryPointLayout{"main":vxr.ShaderEntryPointFragmentLayout{Name:"main", NumRenderColorAttachments:0x1}}, PushConstants:struct { Offset uint32; Size uint32 }{Offset:0x0, Size:0x0}, DescriptorSetLayouts:[][]struct { DescriptorType vxr.DescriptorType; DescriptorCount vxr.ShaderConstant }{}}
	return
}
